---
name: $(Date:yyyyMMdd).$(Rev:.r)

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

stages:
- stage: Build

  jobs:
  - job: build_container_emulated
    displayName: Build container for architecture
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        armhf:
          arch: armhf
          docker_arch: arm32v7
        arm64:
          arch: arm64
          docker_arch: arm64v8
        i386:
          arch: i386
          docker_arch: i386
        amd64:
          arch: amd64
          docker_arch: amd64
    steps:
    - script: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      displayName: Register QEMU wrappers
    - checkout: self
      fetchDepth: 1
    - script: |
        docker build -t "pqclean/ci-container:$(arch)" --build-arg "ARCH=$(docker_arch)" debian-bullseye
      displayName: Build container
    - script: |
        docker login --username $(dockerUsername) --password "$(dockerPassword)"
        docker push "pqclean/ci-container:$(arch)"
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: "Push to Docker hub"
  - job: build_container_powerpc
    displayName: Build container for PowerPC
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - script: docker run --rm --privileged multiarch/qemu-user-static:register --reset
      displayName: Register QEMU wrappers
    - checkout: self
      fetchDepth: 1
    - script: |
        docker build -t "pqclean/ci-container:unstable-ppc" debian-unstable-ppc
      displayName: Build container
    - script: |
        docker login --username $(dockerUsername) --password "$(dockerPassword)"
        docker push "pqclean/ci-container:unstable-ppc"
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: "Push to Docker hub"
